<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="OrderCommon">

	<!-- 保存 -->
	<insert id="saveOrders" parameterType="com.wei.orderpay.bean.order.OrdersBean" useGeneratedKeys="true" keyProperty="orderID">
		INSERT INTO orders (
		<if test="memo != null">
			memo,
		</if>
		guid,
		recepientID,
		amount,
		actualPayment,
		status,
		orderCode,
		payType,
		orderPayCode,
		source,
		type
		) VALUES (
		<if test="memo != null">
			#{memo},
		</if>
		#{guid},
		#{recepientID},
		#{amount},
		#{actualPayment},
		#{status},
		#{orderCode},
		#{payType},
		#{orderPayCode},
		#{source},
		#{type}
		)
	</insert>

	<!-- 买家的订单列表 -->
	<select id="getBuyerOrderList" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where guid = #{guid} and source = #{source} and
		buyerDelete = 0
		<if test="status > 0">
			and status = #{status}
		</if>
		order by statusDT desc
		limit #{page},#{pageSize}
	</select>

	<!-- 卖家的订单列表 -->
	<select id="getSellerOrderList" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where orderID in
		<foreach item="item" collection="orderIDs" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
		and source = #{source} and sellerDelete = 0
		<if test="status > 0">
			and status = #{status}
		</if>
		order by statusDT desc
		limit #{page},#{pageSize}
	</select>

	<!-- 查询订单对象 by orderID-->
	<select id="getOrders" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where orderID = #{orderID} and source = #{source}
	</select>
	
	<!-- 查询订单对象 by orderCode -->
	<select id="getOrdersByOrderCode" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where orderCode = #{orderCode} and source = #{source}
	</select>

	<!-- 修改订单状态 -->
	<update id="updateOrderStatus" parameterType="java.util.Map">
		update orders set
		status = #{newStatus},statusDT=#{statusDT} where orderID = #{orderID}
		and source = #{source} and guid = #{guid} and status = #{oldStatus}
	</update>

	<!-- 修改订单价格 -->
	<update id="updateOrderPrice" parameterType="java.util.HashMap">
		UPDATE orders SET
		actualPayment = #{actualPayment} WHERE source = #{source} AND
		orderID=#{orderID} AND status = #{status}
	</update>

	<!-- 买家删除订单 -->
	<update id="deleteOrdersByBuyer" parameterType="java.util.HashMap">
		UPDATE orders SET
		buyerDelete = 1 WHERE source = #{source} AND orderID=#{orderID} and
		guid = #{guid}
	</update>

	<!-- 卖家删除订单 -->
	<update id="deleteOrdersBySeller" parameterType="java.util.HashMap">
		UPDATE orders
		SET sellerDelete = 1 WHERE source = #{source} AND orderID=#{orderID}
	</update>

	<!-- 查询订单对象 By orderPayCode -->
	<select id="getOrderByOrderPayCode" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where orderPayCode = #{orderPayCode}
		and source = #{source}
	</select>

	<!-- 我的订单总数(卖家+买家) -->
	<select id="getMyOrderCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select
		(SELECT  COUNT(1)
		FROM
			orders
		WHERE
			guid = #{guid} AND source = #{source} and buyerDelete = 0)
		+
		(
		SELECT COUNT(DISTINCT(orderdetail.orderID))
		FROM
			orderdetail 
		JOIN orders ON orderdetail.orderID = orders.orderID
		WHERE
			orderdetail.guid = #{guid} AND orders.sellerDelete = 0 AND orderdetail.source = #{source}	
		)
			
	</select>
	
	<!-- 修改支付订单号 -->
	<update id="updateOrderPayCode" parameterType="java.util.HashMap">
		UPDATE orders SET
		orderPayCode = #{orderPayCode},payType=#{payType} WHERE source = #{source} AND
		orderID=#{orderID} AND status = #{status}
	</update>

	<!-- 修改支付订单最后发起支付时间 -->
	<update id="updateOrderLastPayDT" parameterType="java.util.HashMap">
		UPDATE orders SET
		lastPayDT = #{lastPayDT} WHERE orderID=#{orderID}
	</update>
	
	
	<!-- ================后台相关================== -->
	<!-- 买家逻辑查询-->
	<select id="getBuyerOrderList4Buyer" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where source = #{source} and buyerDelete = 0
		and guid in 
		<foreach collection="guids" item="guids" open="(" close=")" separator=",">
            #{guids}
        </foreach>
		<if test="createStartDT != null">
			and DATE_FORMAT(createDT,'%Y-%m-%d') >= #{createStartDT}
		</if>
		<if test="createEndDT != null">
			and #{createEndDT} >= DATE_FORMAT(createDT,'%Y-%m-%d')
		</if>
		<if test="status > 0">
			and status = #{status}
		</if>
		order by createDT desc
		limit #{page},#{pageSize}
	</select>
	
	<!-- 卖家逻辑查询 -->
	<select id="getBuyerOrderList4Seller" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where source = #{source} and buyerDelete = 0
		and orderID in 
		(SELECT DISTINCT orderID FROM orderdetail 
		WHERE source = #{source} and guid in 
		<foreach collection="guids" item="guids" open="(" close=")" separator=",">
            #{guids}
        </foreach>)
		<if test="createStartDT != null">
			and DATE_FORMAT(createDT,'%Y-%m-%d') >= #{createStartDT}
		</if>
		<if test="createEndDT != null">
			and #{createEndDT} >= DATE_FORMAT(createDT,'%Y-%m-%d')
		</if>
		<if test="status > 0">
			and status = #{status}
		</if>
		order by createDT desc
		limit #{page},#{pageSize}
	</select>
	
	<!-- 无逻辑查询 -->
	<select id="getOrderByNull4Manage" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select * from orders where source = #{source} and buyerDelete = 0
		<if test="createStartDT != null">
			and DATE_FORMAT(createDT,'%Y-%m-%d') >= #{createStartDT}
		</if>
		<if test="createEndDT != null">
			and #{createEndDT} >= DATE_FORMAT(createDT,'%Y-%m-%d')
		</if>
		<if test="status > 0">
			and status = #{status}
		</if>
		order by createDT desc
		limit #{page},#{pageSize}
	</select>
	
	<!-- 后台订单跟进查询逻辑 -->
	<select id="getOrderCodesByStatusAndFollowMark" parameterType="java.util.Map" resultType="java.lang.String">
		select orderCode from orders where source = #{source} and followMark = #{followMark}
		and status in
		<foreach collection="statuses" item="statuses" open="(" close=")" separator=",">
            #{statuses}
        </foreach>
		order by createDT desc
		limit 1 for update
	</select>
	
	<!-- 根据订单Code 更新后台客服跟进标识 -->
	<update id="updateFollowMarkByOrderCode" parameterType="java.lang.String">
		UPDATE orders SET
			followMark = 1 
		WHERE 
			orderCode=#{orderCode} 
		and
			followMark = 0
			
	</update>
	
	<!-- 定时更新后台客服跟进标识 -->
	<update id="updateFollowMark4Quartz" parameterType="java.util.HashMap">
		UPDATE orders SET
			followMark = 0 
		WHERE 
			status in
		<foreach collection="statuses" item="statuses" open="(" close=")" separator=",">
            #{statuses}
        </foreach>
		and
			followMark = 1
	</update>
	
	<!-- 超过24小时没支付的订单 -->
	<select id="getOrdersUnpaidOver24h" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.OrdersBean">
		select orderID, guid from orders where source = #{source} and status = #{orderStatus} and DATE_SUB(NOW(),INTERVAL 1 DAY) > createDT 
	</select>
	
	<!-- 账单管理交易查询 -->
	<select id="getDealList" parameterType="java.util.HashMap" resultType="java.util.Map">
		SELECT a.*,b.guid AS sellerGuid ,c.recordCode,c.charge FROM orders a,orderdetail b ,useraccounttransactionlog c 
		WHERE a.source = #{source} and a.orderID = b.orderID
		AND a.orderID = c.resourceID AND c.userAccountTransactionType = #{userAccountTransactionType}
		<if test="recordCode != null">
			AND c.recordCode = #{recordCode}
		</if>
		<if test="listBuyer != null">
			AND a.guid IN 
			<foreach collection="listBuyer" item="buyer" open="(" close=")" separator=",">
				#{buyer}
			</foreach>
		</if>
		<if test="listSeller != null">
			AND b.guid IN 
			<foreach collection="listSeller" item="seller" open="(" close=")" separator=",">
				#{seller}
			</foreach>
		</if>
		<if test="startDT != null and endDT != null">
			AND DATE_FORMAT(a.createDT,'%Y-%m-%d') >= #{startDT} and #{endDT} >= DATE_FORMAT(a.createDT,'%Y-%m-%d')
		</if>
		order by a.createDT desc
		LIMIT #{page},#{pageSize}
	</select>
	
	<!-- 只修改订单状态时间 (提现发货逻辑)-->
	<update id="updateOrderStatusDT" parameterType="java.util.Map">
		update orders set statusDT=now() where orderID = #{orderID} and source = #{source} and status = #{status} and guid = #{guid}
	</update>
	
	
	
	<!-- =================================================================================业务订单相关处理  begin===================================================== -->
	
	<!-- 根据订单号查询 业务订单   -->
	<select id="getServiceOrderByOrderCode" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.ServiceOrderBean">
		
		SELECT *, s.STATUS AS serviceOrderStatus
		FROM orders AS o
	    LEFT JOIN serviceorderstatus AS s ON o.orderID = s.orderID
		WHERE
		o.source = #{source}
		AND o.orderID = #{orderID}
		<if test="createStartDT != null">
			and DATE_FORMAT(o.createDT,'%Y-%m-%d') >= #{createStartDT}
		</if>
		<if test="createEndDT != null">
			and #{createEndDT} >= DATE_FORMAT(o.createDT,'%Y-%m-%d')
		</if>
		<if test="accountStatus == 0">
			 and NOT EXISTS (select orderID from serviceorderstatus where status = 1)
		</if>
		<if test="accountStatus == 1">
			 and EXISTS (select orderID from serviceorderstatus where status = 1)
		</if>
		
	</select>
	
	
	<!--获取该支付订单号全部全部支付金额  -->
	<select id="getTotalAmountByOrderPayCode" resultType="double">
		SELECT SUM(actualPayment) FROM orders WHERE source=#{source} AND orderPayCode=#{orderPayCode};
	</select>
	
	
	<!-- 根据条件查询出业务人员的订单  -->
	<select id="getServiceOrders" parameterType="java.util.Map" resultType="com.wei.orderpay.bean.order.ServiceOrderBean">
		select *, s.STATUS AS serviceOrderStatus
		FROM  orders AS o 
		LEFT JOIN serviceorderstatus AS s ON o.orderID = s.orderID
		where o.source = #{source} 
		AND  o.status in
		<foreach collection="statuses" item="statuses" open="(" close=")" separator=",">
            #{statuses}
        </foreach>
		
		<if test="buyerGuids != null">
			and o.guid in 
			<foreach collection="buyerGuids" item="guid" open="(" close=")" separator=",">
	            #{guid}
	        </foreach>
		</if>
		and o.orderID in 
		(SELECT DISTINCT od.orderID FROM orderdetail AS  od
		WHERE od.source = #{source} and od.guid in 
		<foreach collection="servicerGuids" item="guid" open="(" close=")" separator=",">
            #{guid}
        </foreach>)
		<if test="createStartDT != null">
			and DATE_FORMAT(o.createDT,'%Y-%m-%d') >= #{createStartDT}
		</if>
		<if test="createEndDT != null">
			and #{createEndDT} >= DATE_FORMAT(o.createDT,'%Y-%m-%d')
		</if>
		<if test="accountStatus == 0">
			 and o.orderID NOT IN (select orderID from serviceorderstatus where status = 1)
		</if>
		<if test="accountStatus == 1">
			 and o.orderID IN (select orderID from serviceorderstatus where status = 1)
		</if>
		order by o.createDT desc
		limit #{page},#{pageSize}
	</select>
	
	
	
		<!--获取卖家已完成订单数量  -->
	<select id="getSellerFinishedOrderCount" resultType="int">
		SELECT  COUNT(DISTINCT orders.orderID) as count from orders,orderdetail where orders.orderID = orderdetail.orderID and status = 4 and orderdetail.storeID= #{uid} and orders.source = #{source};
	</select>
	
		<!--获取卖家累计销售额  -->
	<select id="getSellerFinishedOrderTotalPrice" resultType="double">
		SELECT SUM(amount)/100 from (select DISTINCT orders.orderID,orders.amount*100 as amount  from orders,orderdetail where orders.orderID = orderdetail.orderID and status = 4 and orderdetail.storeID= #{uid} and orders.source = #{source} )as ta ;
	</select>

	<!--根据分享ID 查询订单数  -->
	<select id="getOrderCountByShareId" resultType="int">
		SELECT count(DISTINCT d.orderID) from  orderdetail d,orders o where o.orderID = d.orderID and  d.promoteId = #{promoteId}
        <if test="status != null and status>0">
            and o.status = #{status}
        </if>

	</select>
	
	
	
	
	
	
	<!-- =================================================================================业务订单相关处理 end===================================================== -->
	
	
	
</mapper>




